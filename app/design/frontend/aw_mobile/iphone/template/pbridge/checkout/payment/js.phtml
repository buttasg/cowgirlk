<?php
/**
 * aheadWorks Co.
 *
 * NOTICE OF LICENSE
 *
 * This source file is subject to the EULA
 * that is bundled with this package in the file LICENSE.txt.
 * It is also available through the world-wide-web at this URL:
 * http://ecommerce.aheadworks.com/AW-LICENSE.txt
 *
 * =================================================================
 *                 MAGENTO EDITION USAGE NOTICE
 * =================================================================
 * This software is designed to work with Magento community edition and
 * its use on an edition other than specified is prohibited. aheadWorks does not
 * provide extension support in case of incorrect edition use.
 * =================================================================
 *
 * @category   AW
 * @package    AW_Mobile
 * @version    1.6.7
 * @copyright  Copyright (c) 2010-2012 aheadWorks Co. (http://www.aheadworks.com)
 * @license    http://ecommerce.aheadworks.com/AW-LICENSE.txt
 */
?><script type="text/javascript">
//<![CDATA[
    function reloadIframe(method) {
        var iframeContainer = $('payment_form_' + method + '_container');
        if (iframeContainer) {
            var hiddenElms = iframeContainer.up('li').select('input');
            if (hiddenElms) {
                hiddenElms.each(function(elm){
                    if (elm) elm.remove();
                });
            }
            new Ajax.Updater(
                iframeContainer,
                "<?php echo $this->getUrl('enterprise_pbridge/pbridge/iframe', array('_current' => true, '_secure' => true)); ?>",
                {parameters : {method_code : method},
                 onSuccess: function(transport) {
                         if (iframeContainer.previous('span.pbridge-reload') && iframeContainer.previous('span.pbridge-reload').down('a')) {
                             iframeContainer.previous('span.pbridge-reload').down('a').show();
                         }
                         toggleContinueButton(iframeContainer.up('ul'));
                     }
                }
            );
        }
    }
    function toggleContinueButton(target) {
        var buttonsContainer = $('payment-buttons-container');
        if (buttonsContainer && buttonsContainer.down('button.button')) {
            var continueButton = buttonsContainer.down('button.button');
            if (target.type != 'checkbox' || ! target.checked) {
                var checkedRadio = $$('#co-payment-form input[type="radio"][name="payment[method]"]:checked');
                if (checkedRadio.length) {
                    var iframeContainer = $('payment_form_' + checkedRadio[0].value + '_container');
                    // check whether it is Bridge payment method
                    if (iframeContainer && iframeContainer.previous('span.pbridge-reload')) {
                        return continueButton.setStyle({display:'none'});
                    }
                }
            }
            continueButton.setStyle({display:'block'});
        }
    }

    function loadReviewIframe(method) {
        var iframeContainer = $('review_iframe_container');
        var methodCode = method || payment.currentMethod;
        new Ajax.Updater(
            iframeContainer,
            "<?php echo $this->getUrl('enterprise_pbridge/pbridge/review', array('_current' => true, '_secure' => true)); ?>",
            {parameters : {method_code : methodCode, data: {is_review_iframe: 1}}}
        );
        $('iframe-warning').show();
        $('btn-pay-now').hide();
    }

    /**
    * Hold validation actions before loading review iframe
    */
    function preLoadReviewIframe() {
        if (review.agreementsForm) {
            checkout.setLoadWaiting('review');
            var params = Form.serialize(payment.form) + '&' + Form.serialize(review.agreementsForm);
            var request = new Ajax.Request(
                getAgreementValidationUrl(),
                {
                    method: 'post',
                    parameters: params,
                    onComplete: review.onComplete,
                    onSuccess: validateAgreements,
                    onFailure: checkout.ajaxFailure.bind(checkout)
                }
            );
        } else {
            loadReviewIframe();
        }
    }

    /**
    * Validate agreemnets
    */
    function validateAgreements(transport) {
        if (transport && transport.responseText) {
            try{
                response = eval('(' + transport.responseText + ')');
            }
            catch (e) {
                response = {};
            }
            if (response.success) {
                /* Accepted terms and conditions are no longer available to decline */
                review.agreementsForm.hide();
                loadReviewIframe();
            } else {
                review.nextStep(transport);
            }
        }
    }

    /**
    * Get url for server agreements validation
    *
    * @return string
    */
    function getAgreementValidationUrl() {
        return "<?php echo $this->getUrl('enterprise_pbridge/pbridge/validateAgreement', array('_current' => true)); ?>";
    }
//]]>
</script>
